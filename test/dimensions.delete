import fs from 'fs'
import path from 'path'
import $ from 'jquery';

import { Jqa as $$ } from '../src/jqa';

const htmlMock = fs.readFileSync(path.join(__dirname, 'mocks/dimensions.html'), { encoding: 'utf8'})
beforeEach(() => {
  document.body.innerHTML = htmlMock
})

describe('innerHeight()', () => {
  test('get', () => {
    let myInnerHeight = $$('.box').innerHeight()
    let innerHeight = $('.box').innerHeight()

    expect(myInnerHeight).toBe(innerHeight);
  })
});

// describe('height()', () => {
//   test('get', () => {
//     let myHeight = $$('.box').height()
//     let height = $('.box').height()

//     expect(myHeight).toBe(height)
//   })
// })

// describe('outerHeight()', () => {
//   test('get', () => {
//     let myOuterHeight = $$('.box').outerHeight()
//     let outerHeight = $('.box').outerHeight()

//     expect(myOuterHeight).toBe(outerHeight)
//   })
// })

// describe('innerWidth()', () => {
//   test('get', () => {
//     let myInnerWidth = $$('.box').innerWidth()
//     let innerWidth = $('.box').innerWidth()

//     expect(myInnerWidth).toBe(innerWidth)
//   })
// })

// describe('width()', () => {
//   test('get', () => {
//     let myWidth = $$('.box').width();
//     let width = $('.box').width();

//     expect(myWidth).toBe(width);
//   });
// });

// describe('outerWidth()', () => {
//   test('get', () => {
//     let myOuterWidth = $$('.box').outerWidth();
//     let outerWidth = $('.box').outerWidth();

//     expect(myOuterWidth).toBe(outerWidth);
//   });
// });
